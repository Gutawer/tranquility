version "2.5"

//------------------------------------------------------------
//
// Base weapon class and functions
//
//------------------------------------------------------------
class TQ_Weapon : Weapon {
	action bool TQ_CheckButtonPress(int btn) {
		return ((GetPlayerInput(INPUT_BUTTONS) & btn) && !(GetPlayerInput(INPUT_OLDBUTTONS) & btn));
	}

	action bool TQ_CheckButtonHold(int btn) {
		return (GetPlayerInput(INPUT_BUTTONS) & btn);
	}

	action bool TQ_CheckButtonRelease(int btn) {
		return (!(GetPlayerInput(INPUT_BUTTONS) & btn) && (GetPlayerInput(INPUT_OLDBUTTONS) & btn));
	}
}

//------------------------------------------------------------
//
// Pistol Weapon
//
//------------------------------------------------------------
class TQ_Pistol : TQ_Weapon {
	double SlidePos; //Where the slide is. 0=forward, 1=fully back;
    double SlideSpring; //how much the slide tries to move forward every tic;
	double SlidePressure; //how much back-pressure is currently applied to the slide
	bool SlideLocked;
	bool SafetyOn;

	Default	{
		Weapon.SlotNumber 2;
		Weapon.AmmoType "Clip";
	}

	override void BeginPlay() {
		SlideSpring = 0.5;
		super.PostBeginPlay();
	}

	override void Tick() {
		If(SlideLocked && SlidePos>=0.8) {
			SlidePos += (SlidePressure - SlideSpring);
			SlidePos = clamp(SlidePos, 0.8, 1);
		}
		else {
			SlidePos += (SlidePressure - SlideSpring);
			SlidePos = clamp(SlidePos, 0, 1);
		}
		super.Tick();
    }

	States {
		Spawn:
			PISG P -1;
			Loop;
		Select:
			TNT1 A 0 TQ_InitializeOverlays;
			TNT1 A 1 A_Raise;
			Goto Select+1;
		Deselect:
			TNT1 A 1 A_Lower;
			Loop;
		Ready:
		Ready.Primary:
			TNT1 A 1 TQ_InputChecker; //TQ_PrimaryContextReady;
			Loop;
		Ready.Maint:
			TNT1 A 1; //TQ_MaintContextReady;
			Loop;
		Fire:
			TNT1 A 1 TQ_FireBullet;
			Goto Ready;
		Reload:
			TNT1 A 1 A_SetInventory("Clip",7);
			Goto Ready;

		MagOverlay:
			9MAG A 1 {
			}
			Loop;
		FrameOverlay:
			9FRM A 1;
			Loop;
		SlideOverlay:
			9SLD A 1 A_OverlayOffset(4,-16.0 * invoker.SlidePos,0,0);
			Loop;
	}

	action void TQ_InitializeOverlays() {
		A_SetCrosshair(99); //Set null crosshair (assuming player doesn't override it)
		A_Overlay(2,"MagOverlay");
		A_Overlay(3,"FrameOverlay");
		A_Overlay(4,"SlideOverlay");
		A_OverlayFlags(2,PSPF_ADDBOB,0);
		A_OverlayFlags(3,PSPF_ADDBOB,0);
		A_OverlayFlags(4,PSPF_ADDBOB,0);
	}

	action state TQ_InputChecker() {
		if(TQ_CheckButtonPress(BT_ATTACK)) {
			return ResolveState("Fire");
		}
		if(TQ_CheckButtonPress(BT_RELOAD)) {
			return ResolveState("Reload");
		}
		if(TQ_CheckButtonHold(BT_ALTATTACK)) {
			TQ_PullSlide();
		}
		if(TQ_CheckButtonRelease(BT_ALTATTACK)) {
			A_PlaySound("TQ9mm_SlideSnap",CHAN_AUTO);
			invoker.SlidePressure = 0;
		}

		A_WeaponReady(WRF_NOFIRE|WRF_NOPRIMARY|WRF_NOSECONDARY);
		return ResolveState(null);
	}

	action void TQ_PullSlide() {
		invoker.SlidePressure += 0.2;
		if(invoker.SlidePressure == 1.2) {
			A_PlaySound("TQ9mm_SlidePull",CHAN_AUTO);
		}
		if(invoker.SlidePos>0.8 && CheckRoundsInMag()) {
			invoker.SlideLocked=false;
		}
		else {
			invoker.SlideLocked=true;
		}
	}

	action void TQ_FireBullet() {
		if(CheckSlideForward() && CountInv("Clip")>0) {
			invoker.SlidePos = 1.0;
			A_TakeInventory("Clip",1);
			A_PlaySound("weapons/pistol",CHAN_AUTO);
			A_PlaySound("TQ9mm_SlideFast",CHAN_AUTO);
			if(CheckRoundsInMag()==0) {
				invoker.SlideLocked=true;
			}
		}
	}

	action bool CheckSlideForward() {
		return (invoker.SlidePos == 0);
	}

	action bool CheckRoundsInMag() {
		return(CountInv("Clip"));
	}

	action bool IsSlideMovingBack() {
		return ((invoker.SlidePressure - invoker.SlideSpring)>0);
	}
}

//------------------------------------------------------------
//
// Player Definition
//
//------------------------------------------------------------
class TQ_Player : Doomplayer
{
	Default {
		Player.StartItem "TQ_Pistol";
		Player.StartItem "Fist";
		Player.StartItem "Clip",7;
		Player.Viewheight 50;
		Player.AttackZOffset 26;
		Player.ForwardMove 1.0;
		Player.SideMove 0.8;
		Player.RunHealth 35;
		Player.JumpZ 5.0;
	}
}