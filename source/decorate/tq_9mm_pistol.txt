//------------------------------------------------------------
//
// Basic 9mm pistol
//
//------------------------------------------------------------

//------------------------------------------------------------
// Housekeeping Items
//------------------------------------------------------------

Actor TQ_9mm_Pistol_SlideLocked : Inventory
{
	Inventory.MaxAmount 1
	+IGNORESKILL
}

Actor TQ_9mm_Pistol_RoundInChamber : Inventory
{
	Inventory.MaxAmount 1
	+IGNORESKILL
}

Actor TQ_9mm_Pistol_RoundsInMag : Inventory
{
	Inventory.MaxAmount 15
	+IGNORESKILL
}

//------------------------------------------------------------
// Actual Weapon
//------------------------------------------------------------
ACTOR TQ_9mm_Pistol : Weapon
{
	const int RecoilStrength = 8;
	const int GunRecoil = -2; //
	const int GunFunction = -3;
	Weapon.KickBack 100
	Weapon.BobRangeX 0.65
	Weapon.BobRangeY 0.5
	Weapon.BobSpeed 2.5
	Weapon.BobStyle InverseSmooth
	Weapon.SlotNumber 2
	Weapon.AmmoType "TQ_9mm_Mag"
	+WEAPON.NOAUTOFIRE
	+WEAPON.NO_AUTO_SWITCH
	+WEAPON.AMMO_OPTIONAL
	States
	{
	//------------------------------------------------------------
	//Spawn and select/deselect handling
	//------------------------------------------------------------
	Spawn:
		PISG P -1
		Stop
	Select:
		PISG B 1 //Set default as "slide locked"
		{
			A_SetCrosshair(99); //Set null crosshair (assuming player doesn't override it)
			A_Overlay(2,"FSight"); //Start the front sight overlay loop
			A_Overlay(3,"RSight"); //Start the rear sight overlay loop
			A_OverlayFlags(2,PSPF_ADDBOB,0); //Set front sight to follow weapon bobbing
			A_OverlayFlags(3,PSPF_ADDBOB,0); //Set rear sight to follow weapon bobbing
			If(CountInv("TQ_9mm_Pistol_SlideLocked")==1)
			{	Return state("SelectLoop");	}
			Return state("");
		}
		PISG A 1 //set slide forward if not locked
	SelectLoop:
		"####" "#" 1 A_Raise
		wait
	Deselect:
		"####" "#" 1 //Set everything back to defaults on deselect
		{
			A_Lower;
			A_SetCrosshair(0);
			A_ClearOverlays;
		}
		wait

	//------------------------------------------------------------
	//Ready
	//------------------------------------------------------------
	Ready:
		TNT1 A 0
		{
			If(CountInv("TQ_9mm_Pistol_SlideLocked")==1)
			{	return state("ReadyLocked"); }
			Return state("");
		}
	ReadyNormalLoop:
		PISG A 0
		Goto ReadyLoop
	ReadyLocked:
		PISG B 0
		Goto ReadyLoop
	ReadyLoop:
		"####" "#" 1
		{
			A_WeaponReady(WRF_ALLOWRELOAD);
			A_WeaponOffset(CAllACS("GetOffset",2)*(-0.25),CAllACS("GetOffset",3)*(-0.2),WOF_ADD|WOF_ADD);
		}
		Goto Ready

	//------------------------------------------------------------
	//Basic player-triggered actions
	//------------------------------------------------------------
	Fire:
		"####" "#" 0
		{
			If(countinv("TQ_9mm_Pistol_RoundInChamber")==0 || CountInv("TQ_9mm_Pistol_SlideLocked")==1)
			{	return state("DryFire"); }
			A_GunFlash;
			A_PlaySound("weapons/pistol", CHAN_WEAPON);
			A_FireCustomMissile("TQ_9mm_Bullet",CAllACS("GetOffset",2)*(0.75),0,0,0,0,CAllACS("GetOffset",3)*(0.75));
			return state("");
		}
		PISG B 1
		{
			A_Overlay(GunFunction,"SlideBack");
			if(CountInv("TQ_9mm_Pistol_SlideLocked")==1)
			{ return state("Ready"); }
			return state("");
		}
		PISG C 1 A_Overlay(GunFunction,"SlideForward")
		PISG DC 1 A_WeaponReady
		Goto Ready
	DryFire:
		"####" "#" 1 Offset(1,33)
		"####" "#" 1 Offset(0,33) A_Refire("Dryfire")
		"####" "#" 1 Offset(0,32) A_ClearRefire
		Goto Ready
	AltFire:
		PISG B 0
		Goto PullSlide

	//------------------------------------------------------------
	//Gun Functions
	//------------------------------------------------------------
	SlideBack:
		TNT1 A 0
		{
			A_TakeInventory("TQ_9mm_Pistol_RoundInChamber");
			If (CountInv("TQ_9mm_Pistol_RoundsInMag")==0)
			{	A_GiveInventory("TQ_9mm_Pistol_SlideLocked",1); }
			return state("");
		}
		Stop
	SlideForward:
		TNT1 A 0
		{
			if(CountInv("TQ_9mm_Pistol_RoundsInMag")>0)
			{
				A_TakeInventory("TQ_9mm_Pistol_SlideLocked");
				A_TakeInventory("TQ_9mm_Pistol_RoundsInMag",1);
				A_GiveInventory("TQ_9mm_Pistol_RoundInChamber",1);
			}
		}
		Stop
	MagDrop:
		TNT1 A 0
		{
			A_TakeInventory("TQ_9mm_Pistol_RoundsInMag");
		}
		Stop
	MagInsert:
		TNT1 A 0
		{
			A_TakeInventory("TQ_9mm_Mag",1);
			A_GiveInventory("TQ_9mm_Pistol_RoundsInMag",15);
		}
		Stop


	//------------------------------------------------------------
	//Basic reload functionality
	//------------------------------------------------------------
	Reload:
		"####" "#" 0
		{
			If(CountInv("TQ_9mm_Mag")==0)
			{	return state("Ready"); }
			Return state("");
		}
		"####" "#" 2
		{
			A_Overlay(GunFunction,"MagDrop");
			A_PlaySound("TQMagDrop");
		}
		"####" "###" 1 A_WeaponOffset(0.5,1.0,WOF_ADD)
		"####" "####" 1 A_WeaponOffset(0.5,0.5,WOF_ADD)
		"####" "#" 10
		"####" "#" 5
		{
			A_Overlay(GunFunction,"MagInsert");
			A_PlaySound("TQMagIn");
		}
		"####" "####" 1 A_WeaponOffset(-0.5,-0.5,WOF_ADD)
		"####" "###" 1 A_WeaponOffset(-0.5,-1.0,WOF_ADD)
		"####" "#" 5
		"####" "#" 1
		{
			if(CountInv("TQ_9mm_Pistol_SlideLocked")==1)
			{	return state("ReleaseSlide"); }
			if(countinv("TQ_9mm_Pistol_RoundInChamber")==0)
			{	return state("PullSlide"); }
			Return state("");
		}
		Goto Ready
	ReleaseSlide:
		PISG A 1
		{
			A_Overlay(GunFunction,"SlideForward");
			A_PlaySound("TQ9mm_SlideFast");
		}
		"####" "##" 1 A_WeaponOffset(0,-0.5,WOF_ADD)
		"####" "##" 1 A_WeaponOffset(0,0.5,WOF_ADD)
		Goto Ready
	PullSlide:
		"####" "#" 1
		{
			if(CountInv("TQ_9mm_Pistol_SlideLocked")==0)
			{	A_PlaySound("TQ9mm_SlidePull"); }
		}
		"####" "######" 1 A_WeaponOffset(0,0.25,WOF_ADD)
		PISG B 3
		{
			A_Overlay(GunFunction,"SlideBack");
			if(CountInv("TQ_9mm_Pistol_SlideLocked")==1)
			{ return state("Ready"); }
			return state("");
		}
		PISG A 0
		{
			A_Overlay(GunFunction,"SlideForward");
			A_PlaySound("TQ9mm_SlideSnap");
		}
		"####" "###" 1 A_WeaponOffset(0,-0.5,WOF_ADD)
		Goto Ready

	//------------------------------------------------------------
	//Flash and Recoil+Reset
	//------------------------------------------------------------
	Flash:
		TNT1 A 0 A_Overlay(GunRecoil,"Recoil")
		PISG F random(0,1)
		Stop
	Recoil:
		TNT1 A 1
		TNT1 A 1 {	CAllACS("TQ_RecoilOffset",RecoilStrength); }
	RecoilControl:
		TNT1 AAAA 1
		{
			If(!(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK))
			{	return state("AbandonRecoilControl"); }
			CAllACS("TQ_RecoilOffset",(RecoilStrength/4)*(-1));
			return state("");
		}
	AbandonRecoilControl:
		TNT1 A 1
		Stop

	//------------------------------------------------------------
	//Sight overlay loops
	//------------------------------------------------------------
	FSight:
		TNT1 A 0
		{
			A_OverlayOffset(2,CAllACS("GetOffset",2)*(-0.75),CAllACS("GetOffset",3)*(-0.75));
			if ((CAllACS("GetOffset",2) > 30.0 || CAllACS("GetOffset",2) < -30.0 || CAllACS("GetOffset",3) > 30.0 || CAllACS("GetOffset",3) < -30.0))
			{	return state("HideFSight"); }
			Return state("");
		}
		SIGT A 1
		loop
	HideFSight:
		TNT1 A 1
		Goto FSight
	RSight:
		TNT1 A 0
		{
			A_OverlayOffset(3,CAllACS("GetOffset",2)*(-0.45),CAllACS("GetOffset",3)*(-0.45));
			if ((CAllACS("GetOffset",2) > 30.0 || CAllACS("GetOffset",2) < -30.0 || CAllACS("GetOffset",3) > 30.0 || CAllACS("GetOffset",3) < -30.0))
			{	return state("HideRSight"); }
			Return state("");
		}
		SIGT B 1
		loop
	HideRSight:
		TNT1 A 1
		Goto RSight
	}
}
